@model reserva3.Models.Reserva

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Reserva</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DocumentoCliente" class="control-label"></label>
                <input asp-for="DocumentoCliente" class ="form-control"  asp-items="ViewBag.DocumentoCliente" ></input>
            </div>
            <div class="form-group">
                <label for="NombreCliente">Nombre :</label>
                <input type="text" id="NombreCliente" name="Nombrecliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="Apellidocliente">Apellido:</label>
                <input type="text" id="ApellidoCliente" name="ApellidoCliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="TelefonoCliente">Telefono:</label>
                <input type="text" id="TelefonoCliente" name="TelefonoCliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="Correocliente">Correo:</label>
                <input type="text" id="CorreoCliente" name="CorreoCliente" class="form-control" readonly />
            </div>
       

            <div class="form-group">
                <label asp-for="FechaReserva" class="control-label"></label>
                <input asp-for="FechaReserva" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                <span asp-validation-for="FechaReserva" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaInicio" class="control-label"></label>
                <input asp-for="FechaInicio" class="form-control" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" id="fechaInicio" />
                <span asp-validation-for="FechaInicio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaFinalizacion" class="control-label"></label>
                <input asp-for="FechaFinalizacion" class="form-control" type="date" id="fechaFin" />
                <span asp-validation-for="FechaFinalizacion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="paquete">Paquetes Disponible:</label>
                <select id="paquete" name="paqueteId" class="form-control">
                    @if (ViewBag.Paquetes != null)
                    {
                        foreach (var paquete in ViewBag.Paquetes)
                        {
                            <option value="@paquete.Idpaquete" data-precio="@paquete.Precio">@paquete.NombrePaquete</option>
                        }
                    }
                    else
                    {
                        <option>No hay paquetes disponibles</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="precioPaquete">Precio del paquete:</label>
                <input type="text" id="precioPaquete" name="preciopaquete" class="form-control" readonly />
            </div>


            <div class="form-group">
                <label for="servicio">Servicios Disponibles:</label>
                <select id="servicio" name="servicioids" class="form-control">
                    @if (ViewBag.Servicios != null)
                    {
                        foreach (var servicio in ViewBag.Servicios)
                        {
                            <option value="@servicio.Idservicio" data-precio="@servicio.Costo">@servicio.NombreServicio</option>
                        }
                    }
                    else
                    {
                        <option>No hay servicios disponibles</option>
                    }
                </select>
            </div>


            <div class="form-group">
                <button type="button" id="agregarServicio" class="btn btn-success">Agregar Servicio</button>
            </div>


            <div class="form-group">
                <table class="table" id="tablaServicios">
                    <thead>
                        <tr>
                            <th>Servicio</th>
                            <th>costo</th>
                            <th>Cantidad</th>
                            <th>total</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" class="form-control" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Descuento" class="control-label"></label>
                <input asp-for="Descuento" class="form-control" readonly />
                <span asp-validation-for="Descuento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Iva" class="control-label"></label>
                <input asp-for="Iva" class="form-control" readonly />
                <span asp-validation-for="Iva" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MontoTotal" class="control-label"></label>
                <input asp-for="MontoTotal" class="form-control" id="subtotal" readonly />
                <span asp-validation-for="MontoTotal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MetodoPago" class="control-label"></label>
                <select asp-for="MetodoPago" class ="form-control" asp-items="ViewBag.MetodoPago"></select>
            </div>
            
            <div class="form-group">
                <label asp-for="IdestadoReserva" class="control-label"></label>
                <select asp-for="IdestadoReserva" class ="form-control" asp-items="ViewBag.IdestadoReserva"></select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<!-- Modal de cliente inexistente -->
<div class="modal fade" id="clienteNoExisteModal" tabindex="-1" role="dialog" aria-labelledby="clienteNoExisteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="clienteNoExisteLabel">Cliente no encontrado</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                El cliente no existe. ¿Quieres registrarlo?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <a href="/Clientes/Create" class="btn btn-primary">Registrar cliente</a>
            </div>
        </div>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
       
        // Validación y restricciones para fechas
        document.getElementById("fechaInicio").addEventListener("change", function () {
            const fechaInicio = this.value;
            const fechaFinInput = document.getElementById("fechaFin");

            if (fechaInicio) {
                const fechaFinMin = new Date(fechaInicio);
                fechaFinMin.setDate(fechaFinMin.getDate() + 1);
                fechaFinInput.min = fechaFinMin.toISOString().split("T")[0];
            } else {
                fechaFinInput.min = "";
            }
        });
    </script>
    
    <script>
        $(document).ready(function () {

            $('#paquete').change(function () {

                var selectedOption = $(this).find('option:selected');

                var precio = selectedOption.data('precio');


                if (precio !== undefined) {

                    $('#precioPaquete').val('$' + precio);
                } else {

                    $('#precioPaquete').val('');
                }
            });


            $('#paquete').change();
        });
    </script>
    <script>
        $(document).ready(function () {
            // Actualizar el precio del servicio seleccionado
            $('#servicio').change(function () {
                var selectedOption = $(this).find('option:selected');
                var precio = selectedOption.data('precio');
                if (precio !== undefined) {
                    $('#precioservicio').val('$' + precio);
                } else {
                    $('#precioservicio').val('');
                }
            });

            // Botón "Agregar Servicio"
            $('#agregarServicio').click(function () {
                var selectedService = $('#servicio option:selected');
                var servicioId = selectedService.val();
                var nombreServicio = selectedService.text();
                var precioServicio = selectedService.data('precio');
                var cantidad = 1;  // Valor inicial de cantidad

                if (nombreServicio && precioServicio) {
                    var subtotal = precioServicio * cantidad;

                    // Crear una nueva fila en la tabla
                    var nuevaFila = `
                                <tr data-id="${servicioId}">
                                    <td>${nombreServicio}</td>
                                    <td>$${precioServicio}</td>
                                    <td>
                                        <input type="number" class="form-control cantidad" value="${cantidad}" min="1" style="width: 70px;">
                                    </td>
                                    <td class="subtotal">$${subtotal.toFixed(2)}</td>
                                    <td><button type="button" class="btn btn-danger btn-sm eliminarServicio">Eliminar</button></td>
                                </tr>`;

                    // Agregar la fila a la tabla
                    $('#tablaServicios tbody').append(nuevaFila);

                    // Ocultar el servicio añadido del dropdown
                    $('#servicio option[value="' + servicioId + '"]').hide();
                    $('#servicio').val('');
                    $('#precioservicio').val('');
                }
            });

            // Cambiar cantidad y recalcular subtotal
            $('#tablaServicios').on('change', '.cantidad', function () {
                var fila = $(this).closest('tr');
                var precio = parseFloat(fila.find('td:nth-child(2)').text().replace('$', ''));
                var cantidad = $(this).val();
                var subtotal = precio * cantidad;

                fila.find('.subtotal').text('$' + subtotal.toFixed(2));
            });

            // Eliminar servicio de la tabla y mostrarlo de nuevo en el dropdown
            $('#tablaServicios').on('click', '.eliminarServicio', function () {
                var fila = $(this).closest('tr');
                var servicioId = fila.data('id');

                // Mostrar el servicio de nuevo en el dropdown
                $('#servicio option[value="' + servicioId + '"]').show();

                // Eliminar la fila de la tabla
                fila.remove();
            });
        });
    </script>
     <script>
        document.getElementById("DocumentoCliente").addEventListener("blur", function () {
            var documento = this.value;

            if (documento) {
                fetch(`/Reservas/ObtenerClientePorDocumento?documento=${documento}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Llena los campos con la información del cliente
                            document.getElementById("NombreCliente").value = data.data.nombre;
                            document.getElementById("ApellidoCliente").value = data.data.apellido;
                            document.getElementById("CorreoCliente").value = data.data.email; // Verifica que el campo aquí coincida
                            document.getElementById("TelefonoCliente").value = data.data.telefono;
                        } else {
                            // Muestra el modal si el cliente no existe
                            $('#clienteNoExisteModal').modal('show');

                            // Limpia los campos si no se encuentra el cliente
                            document.getElementById("NombreCliente").value = "";
                            document.getElementById("ApellidoCliente").value = "";
                            document.getElementById("CorreoCliente").value = "";
                            document.getElementById("TelefonoCliente").value = "";
                        }
                    })
                    .catch(error => console.error("Error:", error));
            }
        });
     </script>
    <script>
        document.getElementById("DocumentoCliente").addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault(); 
            }
        });
    </script>
}
