@model reserva3.Models.Reserva

@{
    ViewData["Title"] = "Reserva";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="DocumentoCliente" class="control-label"></label>
                <input asp-for="DocumentoCliente" class ="form-control"  asp-items="ViewBag.DocumentoCliente" ></input>
            </div>
            <div class="form-group">
                <label for="NombreCliente">Nombre :</label>
                <input type="text" id="NombreCliente" name="Nombrecliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="Apellidocliente">Apellido:</label>
                <input type="text" id="ApellidoCliente" name="ApellidoCliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="TelefonoCliente">Telefono:</label>
                <input type="text" id="TelefonoCliente" name="TelefonoCliente" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="Correocliente">Correo:</label>
                <input type="text" id="CorreoCliente" name="CorreoCliente" class="form-control" readonly />
            </div>
       

            <div class="form-group">
                <label asp-for="FechaReserva" class="control-label"></label>
                <input asp-for="FechaReserva" class="form-control" type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />
                <span asp-validation-for="FechaReserva" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaInicio" class="control-label"></label>
                <input asp-for="FechaInicio" class="form-control" type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" id="fechaInicio" />
                <span asp-validation-for="FechaInicio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FechaFinalizacion" class="control-label"></label>
                <input asp-for="FechaFinalizacion" class="form-control" type="date" id="fechaFin" />
                <span asp-validation-for="FechaFinalizacion" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="paquete">Paquetes Disponible:</label>
                <select id="paquete" name="paqueteId" class="form-control">
                    @if (ViewBag.Paquetes != null)
                    {
                        foreach (var paquete in ViewBag.Paquetes)
                        {
                            <option value="@paquete.Idpaquete" data-precio="@paquete.Precio" data-habitacion="@paquete.Idhabitacion">@paquete.NombrePaquete</option>
                        }
                    }
                    else
                    {
                        <option>No hay paquetes disponibles</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="precioPaquete">Precio del paquete:</label>
                <input type="text" id="precioPaquete" name="preciopaquete" class="form-control" readonly />
            </div>
            <div class="form-group">
                <label for="precioPaquete">Habitacion del paquete:</label>
                <input type="text" id="habitacionPaquete" name="habitacionpaquete" class="form-control" readonly />
            </div>


            <div class="form-group">
                <label for="servicio">Servicios Disponibles:</label>
                <select id="servicio" name="servicioids" class="form-control">
                    @if (ViewBag.Servicios != null)
                    {
                        foreach (var servicio in ViewBag.Servicios)
                        {
                            <option value="@servicio.Idservicio" data-precio="@servicio.Costo">@servicio.NombreServicio</option>
                        }
                    }
                    else
                    {
                        <option>No hay servicios disponibles</option>
                    }
                </select>
            </div>


            <div class="form-group">
                <button type="button" id="agregarServicio" class="btn btn-success">Agregar Servicio</button>
            </div>


            <div class="form-group">
                <table class="table" id="tablaServicios">
                    <thead>
                        <tr>
                            <th>Servicio</th>
                            <th>costo</th>
                            <th>Cantidad</th>
                            <th>total</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <label asp-for="SubTotal" class="control-label"></label>
                <input asp-for="SubTotal" id="subtotal" class="form-control" step="0.01" readonly />
                <span asp-validation-for="SubTotal" class="text-danger"></span>
            </div>
            <div class="form-group">
            
            <div class="form-group">
                <label asp-for="Descuento" class="control-label"></label>
                <input asp-for="Descuento" class="form-control" readonly />
                <span asp-validation-for="Descuento" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Iva" class="control-label"></label>
                <input asp-for="Iva" id="iva" class="form-control" readonly />
                <span asp-validation-for="Iva" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MontoTotal" class="control-label"></label>
                <input asp-for="MontoTotal" id="montoTotal" class="form-control"  readonly />
                <span asp-validation-for="MontoTotal" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MetodoPago" class="control-label"></label>
                <select asp-for="MetodoPago" class ="form-control" asp-items="ViewBag.MetodoPago"></select>
            </div>
            
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<!-- Modal de cliente inexistente -->
<div class="modal fade" id="clienteNoExisteModal" tabindex="-1" role="dialog" aria-labelledby="clienteNoExisteLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="clienteNoExisteLabel">Cliente no encontrado</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                El cliente no existe. ¿Quieres registrarlo?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <a href="/Clientes/Create" class="btn btn-primary">Registrar cliente</a>
            </div>
        </div>
    </div>
</div>
<div class="form-group">
    <a asp-action="Index" >Volver atras</a>
</div>
<style>
    .container {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        margin-top: 20px;
    }

    .permissions-container {
        max-height: 120px;
        overflow-y: auto;
        border: 1px solid #ddd;
        border-radius: 5px;
        background-color: #f9f9f9;
        padding: 15px;
    }

    .switch {
        position: relative;
        display: inline-block;
        width: 40px;
        height: 20px;
    }

        .switch input {
            display: none;
        }

    .slider {

        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
        border-radius: 20px;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 14px;
            width: 14px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            border-radius: 50%;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #66bb6a;
    }

        input:checked + .slider:before {
            transform: translateX(20px);
        }

    .btn {
        transition: background-color 0.3s;
    }

        .btn:hover {
            opacity: 0.8;
        }
</style>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
       
        // Validación y restricciones para fechas
        document.getElementById("fechaInicio").addEventListener("change", function () {
            const fechaInicio = this.value;
            const fechaFinInput = document.getElementById("fechaFin");

            if (fechaInicio) {
                const fechaFinMin = new Date(fechaInicio);
                fechaFinMin.setDate(fechaFinMin.getDate() + 1);
                fechaFinInput.min = fechaFinMin.toISOString().split("T")[0];
            } else {
                fechaFinInput.min = "";
            }
        });
    </script>
    
    <script>
        $(document).ready(function () {

            $('#paquete').change(function () {

                var selectedOption = $(this).find('option:selected');

                var precio = selectedOption.data('precio');

                var habitacion = selectedOption.data('habitacion');


                if (precio !== undefined) {

                    $('#precioPaquete').val('$' + precio);
                } else {

                    $('#precioPaquete').val('');
                }

                if (habitacion !== undefined) {

                    $('#habitacionPaquete').val(habitacion);
                } else {

                    $('#habitacionPaquete').val('');
                }
            });
           


            $('#paquete').change();
        });
    </script>
    <script>
        $('#paquete').change(function () {

            var selectedOption = $(this).find('option:selected');

         


            
        });

    </script>
    <script>
        $(document).ready(function () {
            function actualizarTotales() {
                let precioPaquete = parseFloat($('#precioPaquete').val()) || 0;
                let subtotalServicios = 0;

                // Calcular el subtotal de los servicios
                $('#tablaServicios tbody tr').each(function () {
                    let filaSubtotal = parseFloat($(this).find('.subtotal').text().replace('$', '')) || 0;
                    subtotalServicios += filaSubtotal;
                });

                // Subtotal total (paquete + servicios)
                let subtotal = precioPaquete + subtotalServicios;
                $('#subtotal').val(subtotal.toFixed(2));

                // Calcular descuento (10%)
                let descuento = subtotal * 0.10;
                $('#descuento').val(descuento.toFixed(2));

                // Calcular IVA (12%)
                let iva = subtotal * 0.12;
                $('#iva').val(iva.toFixed(2));

                // Calcular monto total (300,000 + subtotal + IVA - descuento)
                let montoTotal = 300000 + subtotal + iva - descuento;
                $('#montoTotal').val(montoTotal.toFixed(2));
            }

            // Mostrar precio del paquete seleccionado
            $('#paquete').change(function () {
                let precioPaquete = parseFloat($(this).find(':selected').data('precio')) || 0;
                $('#precioPaquete').val(precioPaquete.toFixed(2));
                actualizarTotales();
            });

            // Agregar servicios a la tabla
            $('#agregarServicio').click(function () {
                let selectedService = $('#servicio option:selected');
                let nombreServicio = selectedService.text();
                let precioServicio = parseFloat(selectedService.data('precio')) || 0;
                let cantidad = 1;

                if (nombreServicio && precioServicio) {
                    let subtotal = precioServicio * cantidad;

                    let nuevaFila = `
                                <tr>
                                    <td>${nombreServicio}</td>
                                    <td>$${precioServicio.toFixed(2)}</td>
                                    <td><input type="number" class="form-control cantidad" value="${cantidad}" min="1" style="width: 70px;"></td>
                                    <td class="subtotal">$${subtotal.toFixed(2)}</td>
                                    <td><button type="button" class="btn btn-danger btn-sm eliminarServicio">Eliminar</button></td>
                                </tr>
                            `;

                    $('#tablaServicios tbody').append(nuevaFila);
                    $('#servicio').val('');
                    actualizarTotales();
                }
            });

            // Actualizar totales al cambiar la cantidad
            $('#tablaServicios').on('change', '.cantidad', function () {
                let fila = $(this).closest('tr');
                let precio = parseFloat(fila.find('td:nth-child(2)').text().replace('$', '')) || 0;
                let cantidad = parseInt($(this).val()) || 1;
                let subtotal = precio * cantidad;

                fila.find('.subtotal').text('$' + subtotal.toFixed(2));
                actualizarTotales();
            });

            // Eliminar servicio de la tabla
            $('#tablaServicios').on('click', '.eliminarServicio', function () {
                $(this).closest('tr').remove();
                actualizarTotales();
            });
        });
    </script>

}
   

